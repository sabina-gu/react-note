{"version":3,"sources":["components/note-list-item/note-list-item.js","components/note-list/note-list.js","components/create-note/create-note.js","components/edit-note/edit-note.js","components/confirmation/confirmation.js","components/error-button/index.js","components/error-button/error-button.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/error-boundary/index.js","components/error-boundary/error-boundary.js","components/button/index.js","components/button/button.js","components/app/app.js","index.js"],"names":["NoteListItem","props","title","content","onDeleted","onEdit","cutContent","slice","cutTitle","className","onClick","NoteList","notes","onToggle","onSubmit","elements","map","item","id","itemProps","key","onUpdate","CreateNote","onOpen","onAdded","useState","noteTitle","setTitle","noteText","setText","e","preventDefault","length","maxLength","type","value","placeholder","onChange","target","EditNote","onOpenEdit","note","updateNoteId","setNote","idx","nott","JSON","parse","localStorage","getItem","setItem","stringify","updatedNotes","Confirmation","onClose","idNote","newArray","ErrorButton","error","setError","foo","bar","ErrorIndicator","ErrorBoundary","state","hasError","this","setState","children","Component","Button","modal","App","setNotes","isOpen","setOpen","isOpenEdit","setOpenEdit","isRequest","setRequest","setUpdateNoteId","setIdNote","useEffect","raw","deleteItem","toggleRequest","findIndex","el","editNoteTitle","toggleDialogEdit","note2","toggleDialog","onDialog","dialog","newNote","Date","now","createNote","newArr","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.126dc988.chunk.js","sourcesContent":["import React from 'react';\nimport './note-list-item.css'\n\n\n\nconst NoteListItem = (props) => {\n\n    const {title, content, onDeleted, onEdit} = props;\n\n   const cutContent = content.slice(0, 50) + ' ...';\n\n   const cutTitle = title.slice(0, 26);\n\n\n      return <div className='li-div'>\n\n            <div className=\"text\"><p className='titleText'>{cutTitle}</p> <br/> <p className='contentText' >{cutContent}</p></div>\n            <div className=\"i\">\n\n\n            <button className='btn-item edit' onClick={onEdit}> <span className=\"material-icons-outlined\">\n<i className=\"fas fa-pen\"></i>\n</span>\n            </button>\n                <button className='btn-item delete' onClick={onDeleted}><i className=\"fas fa-trash\"></i></button >\n            </div>\n      </div>\n};\n\nexport default NoteListItem","import React from 'react';\nimport NoteListItem from '../note-list-item/note-list-item'\nimport './note-list.css'\n\nconst NoteList = (props) => {\n\n\nconst {notes, onDeleted, onToggle, onEdit, onSubmit} = props;\n\n    const elements = notes.map((item)=>{\n\n        const {id, ...itemProps} = item;\n\n\n\n        return (\n            <li className='item-list' key={id} >\n                <NoteListItem  {...itemProps} onDeleted ={()=>  onDeleted(id)}  onToggle={()=> onToggle()} onEdit ={()=>onEdit(id)} onUpdate ={() =>onSubmit( id)}/></li>\n        );\n    });\n\nreturn (\n    <ul>\n\n        {elements}\n\n    </ul>\n)\n\n};\n\nexport default NoteList","import React, {useState} from 'react';\nimport './create-note.css'\n\nconst CreateNote = (props) => {\n\n\n    const {onOpen, onAdded} = props;\n\n    const [noteTitle, setTitle] = useState('');  //хранит содержание несохраненного заголовка заметки\n    const [noteText, setText] = useState('');     //хранит содержание  несохраненного текста заметки\n\n    const onNoteChangeTitle = (e) => {\n        setTitle(e.target.value)        //отображает содержимое заголовка\n    };\n\n\n    const onNoteChangeText = (e) => {\n        setText(e.target.value);            //отображает содержимое текста\n\n    };\n\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if (noteTitle.length ===0 || noteText.length === 0){\n            return false\n        } else {\n            onAdded(noteTitle, noteText);\n            onOpen();\n        }\n\n                                                        //сохраняет заметку\n    };\n\n\n\n    return (<div className=\"cont-dialog\">\n        <form className='dialog'>\n\n            <span className='span-dialog close' onClick={onOpen}><i className=\"fas fa-times\"></i></span>\n            <span className='span-dialog create' onClick={onSubmit}><i className=\"fas fa-save\"></i></span><br/>\n\n\n            <input className='note-input title-create'\n                   maxLength=\"20\"\n                   type=\"text\" value={noteTitle}\n                   placeholder='Title'\n                   onChange={onNoteChangeTitle}/><br/>\n\n\n            <textarea className='note-input content-create'\n                   type=\"text\"\n                   placeholder='Your note...'\n                   value={noteText}\n\n                   onChange={onNoteChangeText}/>\n        </form>\n        </div>\n    )\n\n};\n\nexport default CreateNote\n\n\n","import React from 'react';\nimport './edit-note.css'\n\n\nconst EditNote = (props) => {\n\n    const {onOpenEdit, note, updateNoteId,setTitle,setNote, setText ,noteText, noteTitle} = props;\n\n\n     const onSubmit = (e) => {\n        e.preventDefault();\n\n\n\n        const idx = updateNoteId;\n\n\n\n         let nott = JSON.parse(localStorage.getItem('notes'))|| []\n\n         nott[idx].title = noteTitle;\n         nott[idx].content = noteText;\n\n\n\n         localStorage.setItem('notes',JSON.stringify(nott));\n\n         const updatedNotes = localStorage.getItem('notes') ||[]\n\n         setNote(JSON.parse(updatedNotes));\n\n         onOpenEdit();\n\n\n            };\n\n\n\n\n\n\n\n\n\n    return (<div className=\"cont-dialog-save\">\n        <form className='dialog'>\n\n            <span className='span-dialog close' onClick={onOpenEdit}><i className=\"fas fa-times\"></i></span>\n            <span className='span-dialog create' onClick={onSubmit}><i className=\"fas fa-save\"></i></span><br/>\n\n\n            <input className='note-input title-create'\n                   maxLength=\"20\"\n                type=\"text\"\n                   placeholder={note}\n                   onChange={e => setTitle(e.target.value)}\n                    value={noteTitle}/> <br/>\n\n\n            <textarea type=\"text\"\n                   className='note-input content-create'\n                   placeholder={note}\n                   onChange={e => setText(e.target.value)}\n                   value={noteText}\n                  />\n        </form>\n        </div>\n\n    )\n\n};\n\nexport default EditNote","import React from 'react';\n\nimport './confirmation.css'\n\n\nconst Confirmation = (props) => {\n\n    const {onClose, idNote, setNote, notes} = props;\n\n   const confirm = ()=> {\n       const newArray = [...notes.slice(0, idNote),\n           ...notes.slice(idNote+1)];\n\n       setNote(newArray);\n       onClose()\n    };            // удаляет заметку\n\n\n    return (\n        <div className=\"back\">\n            <div className=\"wind\">\n                <p className=\"request\"> Are you sure to delete  <b>{notes[idNote].title}</b>? </p>\n                    <div className=\"btn\">\n                        <button className=\"conf no\" onClick={onClose}>\n                            No\n                        </button>\n                        <button className=\"conf yes\" onClick={confirm}>\n                            Yes\n                        </button>\n                    </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Confirmation","import ErrorButton from './error-button'\n\nexport default ErrorButton","import React, {useState} from 'react';\nimport './error-button.css'\n\nconst ErrorButton =()=>{\n\n    const [error, setError] = useState(false)\n\n\n    if(error){\n       this.foo.bar=0;\n    }\n\n\n    return (\n        <button className='btn-err'\n                onClick={()=> setError (true)}><i className=\"fas fa-biohazard\"></i></button>\n    )\n}\n\nexport default ErrorButton","\nimport ErrorIndicator from './error-indicator'\n\nexport default ErrorIndicator","import React from 'react';\nimport './error-indicator.css'\n\nconst ErrorIndicator =()=>{\n    return(  <div className=\"error-indicator\">\n\n        <span>Ups!</span>\n        <span>something has gone wrong</span>\n    </div>)\n\n};\n\nexport default ErrorIndicator\n","import ErrorBoundary from './error-boundary'\n\nexport default ErrorBoundary","import React, {Component} from \"react\";\nimport ErrorIndicator from \"../error-indicator\";\n\nexport default class ErrorBoundary extends Component {\n\n    state={\n        hasError: false\n    };\n\n    componentDidCatch() {\n        this.setState({\n            hasError:true\n        })\n    }\n\n    render(){\n\n        if(this.state.hasError){\n            return <ErrorIndicator/>\n        }\n\n\n        return this.props.children\n\n    }\n}","import Button from './button'\n\nexport default Button","import React from 'react';\nimport './button.css'\n\nconst Button =(props)=> {\n\n\nconst {modal}=props;\n\n\n    return (\n        <button className=\"button\" onClick={modal}>ADD NEW NOTE</button>\n    )\n\n};\n\nexport default Button","import React, {useState, useEffect} from 'react';\n\nimport NoteList from '../note-list/note-list';\nimport CreateNote from '../create-note/create-note';\nimport EditNote from '../edit-note/edit-note'\nimport Confirmation from '../confirmation/confirmation'\nimport ErrorButton from \"../error-button\";\nimport ErrorBoundary from \"../error-boundary\";\nimport Button from \"../button\";\n\nimport './app.css'\n\n\n\n\nconst App = () => {\n\n    const [notes, setNotes] = useState([]);  //создает пустой массив с заметками\n\n    const [isOpen, setOpen] = useState(false);   //открывает окно создания заметки\n\n    const [isOpenEdit, setOpenEdit] = useState(false); //открывает окно редактирование заметки\n\n    const [isRequest, setRequest] = useState(false); //открывает окно confirmation\n\n\n    let [updateNoteId, setUpdateNoteId] = useState([]);   //передает нужный ID компоненту EditNote\n\n    let [idNote, setIdNote] = useState([]);          //сохраняет ID заметки\n\n    let [noteTitle, setTitle] = useState('');    //сохраняет заголовок\n\n    let [noteText, setText] = useState('');    //сохраняет текст\n\n\n\n    useEffect(()=>{\n        localStorage.setItem('notes', JSON.stringify(notes))\n    }, [notes]); //сохраняет заметки в localStorage\n\n\n    useState(()=>{\n        const raw = localStorage.getItem('notes') ||[];\n        setNotes(JSON.parse(raw))\n    }, []);                  //извлекает заметки из localStorage\n\n\n    const deleteItem = (id) => {\n        toggleRequest();\n        const idx = notes.findIndex((el)=>el.id ===id);\n        setIdNote(idx)\n\n    };                                                        // передает ID для удаления в компоненте Confirmation\n\n\n    const editNoteTitle = (id) => {\n\n        toggleDialogEdit();\n        const idx = notes.findIndex((el)=>el.id ===id);\n        let note2 = JSON.parse(localStorage.getItem('notes'));\n        noteTitle = note2[idx].title;\n        noteText = note2[idx].content;\n        setUpdateNoteId(idx);\n        setTitle(noteTitle);\n        setText(noteText);\n    };                                                   //редактирует заметку\n\n\n\n    const toggleDialog = () => {\n      setOpen (!isOpen);\n    };                                                    //открывает окно создания заметки\n\n    const toggleDialogEdit = () => {\n        setOpenEdit (!isOpenEdit);\n    };                                                    //открывает окно редактирования заметки\n\n    const toggleRequest = () => {\n        setRequest(!isRequest)\n    };                                                    //открывает окно confirmation\n\n    const createNote = (title, content) => {\n        return {\n            title,\n            content,\n            id: Date.now()\n        };\n    };                                                    //создает новую заметку\n\n    const addNote = (title, content) => {\n        toggleDialog();\n        const newNote = createNote(title, content);\n\n            const newArr = [\n                ...notes,\n                newNote\n            ];\n            setNotes(newArr)\n    };                                                //добавляет новую заметку в массив заметок\n\n\n    return (\n        <ErrorBoundary>\n        <div className='wrapper'>\n            <div className='container'>\n                <div className='main'>\n                <h1 className='note-title'>NOTES</h1>\n                <ErrorButton/>\n                </div>\n                <NoteList  notes={notes} onDeleted={deleteItem} onDialog = {toggleRequest} onToggle={toggleDialogEdit} onEdit={editNoteTitle} dialog={EditNote}/>\n                <Button modal={toggleDialog}/>\n\n                {isOpen ? <CreateNote onOpen={toggleDialog}\n                                  onAdded={addNote}/> : null}\n\n                {isOpenEdit ? <EditNote onOpenEdit={toggleDialogEdit} noteText={noteText} noteTitle={noteTitle}\n                                        notes={notes} setNote={setNotes} onEdit={editNoteTitle} updateNoteId ={updateNoteId} setTitle={setTitle} setText={setText}/> : null}\n\n                {isRequest ? <Confirmation onClose={toggleRequest} setNote={setNotes} idNote={idNote} notes={notes} onDeleted={deleteItem}/>: null}\n\n            </div>\n        </div>\n        </ErrorBoundary>\n    )\n\n};\n\nexport default App;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport App from './components/app/app';\n\n\n\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}